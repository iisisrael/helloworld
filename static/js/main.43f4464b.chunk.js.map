{"version":3,"sources":["components/header/is_books.jpg","components/header/header.js","components/section/section.js","serviceWorker.js","index.js"],"names":["module","exports","Avatar","props","className","src","url","alt","text","Contact","target","rel","href","icon","texts","HeaderPrint","Mugshot","faLinkedin","faMobile","faEnvelope","isBooks","Header","print","Tabs","defaultActiveKey","id","Tab","tabClassName","eventKey","title","key","getTitleById","SectionPrint","Card","border","Title","Body","Row","Col","Section","bg","Boolean","window","location","hostname","match","hasQueryArg","keyName","QueryString","parse","search","PrintMe","faPrint","ReactDOM","render","StrictMode","Container","lg","xl","document","getElementById","onload","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kJAAAA,EAAOC,QAAU,IAA0B,sC,sQCS3C,SAASC,EAAOC,GAEZ,OACI,yBAAKC,UAAU,SACXC,IAAKF,EAAMG,IACXC,IAAKJ,EAAMK,OAKvB,SAASC,EAAQN,GAEb,OAAIA,EAAMG,IAEF,uBAAGF,UAAU,UAAUM,OAAO,SAASC,IAAI,sBAAsBC,KAAMT,EAAMG,KACxEH,EAAMU,KAAO,kBAAC,IAAD,CAAiBA,KAAMV,EAAMU,OAAW,GACrDV,EAAMW,OAASX,EAAMK,MAAQL,EAAMG,KAMxC,0BAAMF,UAAU,WACXD,EAAMU,KAAO,kBAAC,IAAD,CAAiBA,KAAMV,EAAMU,OAAW,GACrDV,EAAMW,OAASX,EAAMK,MAgCtC,SAASO,IAEL,OACI,gCACI,kBAACC,EAAD,MACA,yBAAKZ,UAAU,mBACX,+CACA,kBAACK,EAAD,CAASI,KAAMI,IAAYT,KAAK,yBAChC,kBAACC,EAAD,CAASI,KAAMK,IAAUV,KAAK,iBAC9B,kBAACC,EAAD,CAASI,KAAMM,IAAYL,MAAO,CAAC,cAAe,6BAAQ,8BAM1E,SAASE,IAEL,OACI,yBAAKZ,UAAU,WACX,6BACI,kBAACF,EAAD,CAAQI,IAAKc,IAASZ,KAAK,gEAC3B,wCAAa,6BAAb,YACA,+CAMDa,MAtDf,SAAgBlB,GAEZ,OAAIA,EAAMmB,MAEF,kBAACP,EAAD,MAKJ,gCACI,kBAACC,EAAD,MACA,kBAACO,EAAA,EAAD,CAAMC,iBAAiB,eAAeC,GAAG,gBACrC,kBAACC,EAAA,EAAD,CAAKC,aAAa,eAAeC,SAAS,eAAeC,MAAO,kBAAC,IAAD,CAAiBhB,KAAMI,OACnF,kBAACR,EAAD,CAASH,IAAI,0BAEjB,kBAACoB,EAAA,EAAD,CAAKC,aAAa,eAAeC,SAAS,YAAYC,MAAO,kBAAC,IAAD,CAAiBhB,KAAMK,OAChF,kBAACT,EAAD,CAASH,IAAI,mBAAmBE,KAAK,kBAEzC,kBAACkB,EAAA,EAAD,CAAKC,aAAa,eAAeC,SAAS,cAAcC,MAAO,kBAAC,IAAD,CAAiBhB,KAAMM,OAClF,kBAACV,EAAD,CAASH,IAAI,wCAAwCQ,MAAO,CAAC,cAAe,wBAAIgB,IAAI,MAAQ,gC,yCCpDhH,SAASC,EAAaN,GAElB,OAAOA,GACH,IAAK,UACD,MAAO,0BACX,IAAK,WACD,MAAO,gBACX,IAAK,QACD,MAAO,kBACX,IAAK,YACD,MAAO,YACX,QACI,OAAOA,GA4BnB,SAASO,EAAa7B,GAElB,OACI,yBAAKC,UAAU,iBACX,kBAAC6B,EAAA,EAAD,CAAMC,OAAO,QACT,kBAACD,EAAA,EAAKE,MAAN,KAAaJ,EAAa5B,EAAMsB,KAChC,kBAACQ,EAAA,EAAKG,KAAN,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,2CAAiBnC,EAAMsB,GAAvB,WAkBbc,MAnDf,SAAiBpC,GAEb,OAAIA,EAAMmB,MAEF,kBAACU,EAAiB7B,GAKtB,yBAAKC,UAAU,WACX,kBAAC6B,EAAA,EAAD,CAAMC,OAAO,UAAUM,GAAG,QACtB,kBAACP,EAAA,EAAKE,MAAN,KAAaJ,EAAa5B,EAAMsB,KAChC,kBAACQ,EAAA,EAAKG,KAAN,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,2CAAiBnC,EAAMsB,GAAvB,YCzBRgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCLN,SAASC,EAAYC,GAIjB,OAAOA,KAFOC,IAAYC,MAAMP,OAAOC,SAASO,QAUpD,SAASC,IAEL,OAAIL,EAAY,SACL,GAIP,uBAAGrB,GAAG,WAAWb,KAAK,UAClB,kBAAC,IAAD,CAAiBC,KAAMuC,OAKnCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAACC,EAAA,EAAD,CAAWpD,UAlBR,wBAA0B0C,EAAY,SAAW,oBAAsB,KAmBtE,kBAACK,EAAD,MACA,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKmB,GAAG,IAAIC,GAAG,KACX,kBAAC,EAAD,CAAQpC,MAAOwB,EAAY,YAE/B,kBAACR,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAAC,EAAD,CAASf,MAAOwB,EAAY,SAAUrB,GAAG,YACzC,kBAAC,EAAD,CAASH,MAAOwB,EAAY,SAAUrB,GAAG,aACzC,kBAAC,EAAD,CAASH,MAAOwB,EAAY,SAAUrB,GAAG,UACzC,kBAAC,EAAD,CAASH,MAAOwB,EAAY,SAAUrB,GAAG,mBAM7DkC,SAASC,eAAe,SAGxBd,EAAY,WACZJ,OAAOmB,OAAS,WAEZnB,OAAOpB,UDoET,kBAAmBwC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.43f4464b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/is_books.92e051e5.jpg\";","import React from 'react';\nimport './header.scss';\nimport isBooks from './is_books.jpg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { faEnvelope, faMobile } from '@fortawesome/free-solid-svg-icons';\nimport Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\n\nfunction Avatar(props)\n{\n    return (\n        <img className='avatar'\n            src={props.url}\n            alt={props.text}\n        />\n    );\n}\n\nfunction Contact(props)\n{\n    if (props.url) {\n        return (\n            <a className='contact' target='_blank' rel='noopener noreferrer' href={props.url}>\n                {props.icon ? <FontAwesomeIcon icon={props.icon} /> : ''}\n                {props.texts || props.text || props.url}\n            </a>\n        );\n    }\n    else {\n        return (\n            <span className='contact'>\n                {props.icon ? <FontAwesomeIcon icon={props.icon} /> : ''}\n                {props.texts || props.text}\n            </span>\n        );\n    }\n}\n\nfunction Header(props)\n{\n    if (props.print) {\n        return (\n            <HeaderPrint />\n        );\n    }\n\n    return (\n        <header>\n            <Mugshot />\n            <Tabs defaultActiveKey='linkedin-tab' id='contact-tabs'>\n                <Tab tabClassName=\"text-primary\" eventKey='linkedin-tab' title={<FontAwesomeIcon icon={faLinkedin} />}>\n                    <Contact url='http://iisisrael.com' />\n                </Tab>\n                <Tab tabClassName=\"text-primary\" eventKey='phone-tab' title={<FontAwesomeIcon icon={faMobile} />}>\n                    <Contact url='tel:+15122340382' text='512.234.0382' />\n                </Tab>\n                <Tab tabClassName=\"text-primary\" eventKey='address-tab' title={<FontAwesomeIcon icon={faEnvelope} />}>\n                    <Contact url='https://goo.gl/maps/8W5WZ4xxofz9Js8L7' texts={['1025 2nd St', <br key='1' />, 'Hempstead, Texas 77445']} />\n                </Tab>\n            </Tabs>\n        </header>\n    );\n}\n\nfunction HeaderPrint()\n{\n    return (\n        <header>\n            <Mugshot />\n            <div className='contact-details'>\n                <h2>Contact Details</h2>\n                <Contact icon={faLinkedin} text='http://iisisrael.com' />\n                <Contact icon={faMobile} text='512.234.0382' />\n                <Contact icon={faEnvelope} texts={['1025 2nd St', <br />, 'Hempstead, Texas 77445']} />\n            </div>\n        </header>\n    );\n}\n\nfunction Mugshot()\n{\n    return (\n        <div className='mugshot'>\n            <div>\n                <Avatar url={isBooks} text='Stunning photo of Israel in front of his sci-fi book shelf.' />\n                <h1>Israel J.<br />Carberry</h1>\n                <h3>Hello, world.</h3>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport './section.scss';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nfunction getTitleById(id)\n{\n    switch(id) {\n        case 'current':\n            return 'Current Key Initiatives';\n        case 'previous':\n            return 'Previous Work';\n        case 'books':\n            return 'Books of Import';\n        case 'education':\n            return 'Education';\n        default:\n            return id;\n    }\n}\n\nfunction Section(props)\n{\n    if (props.print) {\n        return (\n            <SectionPrint {...props} />\n        );\n    }\n\n    return (\n        <div className='section'>\n            <Card border='primary' bg='dark'>\n                <Card.Title>{getTitleById(props.id)}</Card.Title>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <p>Content for \"{props.id}\".</p>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nfunction SectionPrint(props)\n{\n    return (\n        <div className='section-print'>\n            <Card border='dark'>\n                <Card.Title>{getTitleById(props.id)}</Card.Title>\n                <Card.Body>\n                    <Row>\n                        <Col>\n                            <p>Content for \"{props.id}\".</p>\n                        </Col>\n                    </Row>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\n// function Title(props)\n// {\n//     return (\n//         <h3>\n//             {getTitleById(props.id)}\n//         </h3>\n//     );\n// }\n\nexport default Section;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Header from './components/header/header';\nimport QueryString from 'query-string';\nimport Row from 'react-bootstrap/Row';\nimport Section from './components/section/section';\nimport * as serviceWorker from './serviceWorker';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPrint } from '@fortawesome/free-solid-svg-icons';\n\nfunction hasQueryArg(keyName)\n{\n    const query = QueryString.parse(window.location.search);\n\n    return keyName in query;\n}\n\nfunction helloWorldContainerName()\n{\n    return 'helloworld-container' + (hasQueryArg('print') ? ' helloworld-print' : '');\n}\n\nfunction PrintMe()\n{\n    if (hasQueryArg('print')) {\n        return '';\n    }\n\n    return (\n        <a id='print-me' href='?print'>\n            <FontAwesomeIcon icon={faPrint} />\n        </a>\n    );\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Container className={helloWorldContainerName()}>\n            <PrintMe />\n            <Row>\n                <Col lg='5' xl='4'>\n                    <Header print={hasQueryArg('print')} />\n                </Col>\n                <Col>\n                    <Row>\n                        <Section print={hasQueryArg('print')} id='current' />\n                        <Section print={hasQueryArg('print')} id='previous' />\n                        <Section print={hasQueryArg('print')} id='books' />\n                        <Section print={hasQueryArg('print')} id='education' />\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nif (hasQueryArg('print')) {\n    window.onload = function()\n    {\n        window.print();\n    }\n}\n\nserviceWorker.unregister();\n"],"sourceRoot":""}